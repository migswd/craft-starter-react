{# homepage #}
{% extends '_layout' %}

{% block content %}


{#
Trying to get an auto generated whitelist of background colors
this is what is output when running `npm run tw-whitelist` -see:

template/_tw-config/whitelist.scss

the --flat flag isn't working as expected created a github issue

https://github.com/dobromir-hristov/tailwindcss-export-config/issues/61

will revisit later
#}


  <div id="main-content" aria-label="page content">

	<div class="container w-full">

    <div class="px-8">
      <h2 class="mt-12 text-3xl uppercase dark:text-red">Fonts</h2>
      <h1 class="h1 dark:text-white">
        H1 - Josefin text-blue
      </h1><!-- /.h2 -->
      <h2 class="h2 dark:text-white">
        H2 - Josefin text-blue
      </h2><!-- /.h2 -->
      <h3 class="dark:text-white">
        H3 - Josefin text-blue
      </h3><!-- /.h2 -->
      <h4 class="h2 dark:text-white">
        H4 - Josefin text-blue
      </h4><!-- /.h2 -->
      <p class="mt-8 dark:text-white">
        <span class="block font-bold">
          Body Copy - Jost
        </span>
        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Illo vitae est neque obcaecati quaerat voluptatibus distinctio unde voluptatum voluptates! Tempora hic odio iure id eum?
      </p>

      {#
      // provide downloadable logo asset
      <h2 class="mt-12 text-3xl uppercase dark:text-red">Logo (svg)</h2>
      <div class="flex flex-row gap-6 py-8">
        {{ svg('@webroot/assets/images/logo.svg')|attr({class:'max-w-[450px] dark:fill-white'})}}
        <a href="@webroot/assets/images/logo.svg" class="underline text-red hover:no-underline underline-offset-2" download>Download</a>
      </div> #}


        {# output tailwind colors #}
        {% set twConfig %}
          {% include "_tw-config/tw.json" %}
        {% endset %}

        {#
        Grab the colors arraw from the twConfig file which is generated by running - this pulls in the first array -- colors
        npm run export-tailwind-config
         #}
        {% set json = twConfig|json_decode|slice(0,1) %}

        {#
          OUTPUTS as list that can be copied/pasted into _whitelist
          so that all colors are available as background colors
          necessary since we're concatenating variables here to output the list and not every color may be in use elsewhere on the site which tailwind will then ignore. Add this if circles are white and not the correct color.
         #}
        {# <div class="w-1/2 testing">
          <div class="p-4 text-green-700 bg-gray-300">
            {% for key,value in json %}
              <p class="mb-4">
                add filter |slice(0,7) if you want to have less colors
              </p><!-- /.mb-4 -->
              {% for key1, value1 in value|slice(0,3) %}
                {% for key2, value2 in value1 %}
                  bg-{{ key1 }}{{ key2 =='DEFAULT' ? '': "-" ~ key2 }}
                  <span class="hidden">
                     : {{ value2 }}
                  </span> <br>
                {% endfor %}
              {% endfor %}
            {% endfor %}
          </div>
        </div><!-- /.testing --> #}


      <h2 class="mt-12 text-3xl uppercase dark:text-red">Colors</h2>
      <ul class="grid grid-cols-2 gap-6 mb-12 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6">



        {% for key,value in json %}

          {# add filter |slice(0,7) if you want to have less colors i.e. ignore all tailwind colors which are added at the end #}
          {% for key1, value1 in value|slice(0,3) %}
            {% for key2, value2 in value1 %}

              {% set backgroundClass %}
                bg-{{ key1 }}{{ key2 =='DEFAULT' ? '': "-" ~ key2 }} : {{ value2 }}
              {% endset %}

                <li class="flex flex-col items-center justify-center">
                  <div class="w-28 max-w-full aspect-square rounded-full {{ backgroundClass }} shadow-lg shadow-black/50 dark:shadow-white/30"></div>
                  <p class="mt-4 text-sm leading-tight text-center dark:text-white">{{ key1 }}{{ key2 =='DEFAULT' ? '': "-" ~ key2 }} <br> {{ value2 }}</p>
                </li>

            {% endfor %}
          {% endfor %}
        {% endfor %}


        {# {% set colorLut = {
          black: {name:'black', bg:'bg-black', hex:'#1D1A27'},
          blue: {name: 'blue', bg: 'bg-blue', hex:'#2C45FD' },
          blueMedium: {name: 'blue-medium', bg: 'bg-blue-medium', hex: '#3860F8'},
          blueDarkmodeblue: {name: 'blue-darkmodeblue', bg: 'bg-blue-darkmodeblue', hex: '#d9dcf2'},
          blueDmdark:{ name: 'blue-dmdark', bg: 'bg-blue-dmdark', hex:'#162383'},
          blueDmdark1:{ name: 'blue-dmdark1', bg: 'bg-blue-dmdark1', hex:'#2938a8'},
          red: {name:'red', bg:'bg-red', hex:'#FF0037'},
          redLight: {name: 'red-light', bg: 'bg-red-light', hex:'#FF5959' },
          redLighter: {name: 'red-lighter', bg: 'bg-red-lighter', hex: '#ffc8c4'},
          grey: {name:'grey', bg:'bg-grey', hex:'#ADA9BB'},
          greyLight: {name: 'grey-light', bg: 'bg-grey-light', hex:'#E2E2E2' },
          greyLighter: {name: 'grey-lighter', bg: 'bg-grey-lighter', hex:'#f1f5f8' },
          greyLightest: {name: 'grey-lightest', bg: 'bg-grey-lightest', hex:'#FBF8FF' },
          greyDark: {name: 'grey-dark', bg: 'bg-grey-dark', hex:'#8795a1' },
          greyDarker: {name: 'grey-darker', bg: 'bg-grey-darker', hex: '#484554'},
          greyDarkest: {name: 'grey-darkest', bg: 'bg-grey-darkest', hex: '#3d4852'},
          white: {name:'white', bg:'bg-white', hex:'#ffffff'}
        } %}

        {% for item in colorLut %}
        <li class="flex flex-col items-center justify-center {# w-1/2 w-full md:w-1/6 sm:w-1/4 }">
          <div class="w-28 max-w-full aspect-square rounded-full {{ item.bg }} shadow-lg shadow-black/50 dark:shadow-white/30"></div>
          <p class="mt-4 text-sm leading-tight text-center dark:text-white">{{ item.name }} <br> {{ item.hex }}</p>
        </li>
        {% endfor %} #}
      </ul>
    </div>

	</div>

  </div>

{% endblock %}